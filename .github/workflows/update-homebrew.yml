name: Update Homebrew Formula

on:
  release:
    types: [published]

jobs:
  update-formula:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout homebrew-tap repo
        uses: actions/checkout@v4
        with:
          repository: yowainwright/homebrew-tap
          token: ${{ secrets.HOMEBREW_TAP_TOKEN }}

      - name: Get release info
        id: release
        run: |
          VERSION="${{ github.event.release.tag_name }}"
          VERSION="${VERSION#v}"
          echo "version=$VERSION" >> $GITHUB_OUTPUT
          echo "tag=${{ github.event.release.tag_name }}" >> $GITHUB_OUTPUT

      - name: Download release assets and calculate SHA256
        run: |
          VERSION="${{ steps.release.outputs.tag }}"

          # Download and hash each binary
          curl -L -o 1ls-darwin-arm64 "https://github.com/yowainwright/1ls/releases/download/$VERSION/1ls-darwin-arm64"
          SHA_DARWIN_ARM64=$(sha256sum 1ls-darwin-arm64 | cut -d' ' -f1)

          curl -L -o 1ls-darwin-x64 "https://github.com/yowainwright/1ls/releases/download/$VERSION/1ls-darwin-x64"
          SHA_DARWIN_X64=$(sha256sum 1ls-darwin-x64 | cut -d' ' -f1)

          curl -L -o 1ls-linux-arm64 "https://github.com/yowainwright/1ls/releases/download/$VERSION/1ls-linux-arm64"
          SHA_LINUX_ARM64=$(sha256sum 1ls-linux-arm64 | cut -d' ' -f1)

          curl -L -o 1ls-linux-x64 "https://github.com/yowainwright/1ls/releases/download/$VERSION/1ls-linux-x64"
          SHA_LINUX_X64=$(sha256sum 1ls-linux-x64 | cut -d' ' -f1)

          echo "sha_darwin_arm64=$SHA_DARWIN_ARM64" >> $GITHUB_OUTPUT
          echo "sha_darwin_x64=$SHA_DARWIN_X64" >> $GITHUB_OUTPUT
          echo "sha_linux_arm64=$SHA_LINUX_ARM64" >> $GITHUB_OUTPUT
          echo "sha_linux_x64=$SHA_LINUX_X64" >> $GITHUB_OUTPUT
        id: checksums

      - name: Update formula
        run: |
          cat > Formula/1ls.rb << 'EOF'
          class Onels < Formula
            desc "1 line script - Lightweight JSON CLI with JavaScript syntax"
            homepage "https://github.com/yowainwright/1ls"
            version "${{ steps.release.outputs.version }}"
            license "MIT"

            on_macos do
              if Hardware::CPU.arm?
                url "https://github.com/yowainwright/1ls/releases/download/${{ steps.release.outputs.tag }}/1ls-darwin-arm64"
                sha256 "${{ steps.checksums.outputs.sha_darwin_arm64 }}"
              else
                url "https://github.com/yowainwright/1ls/releases/download/${{ steps.release.outputs.tag }}/1ls-darwin-x64"
                sha256 "${{ steps.checksums.outputs.sha_darwin_x64 }}"
              end
            end

            on_linux do
              if Hardware::CPU.arm?
                url "https://github.com/yowainwright/1ls/releases/download/${{ steps.release.outputs.tag }}/1ls-linux-arm64"
                sha256 "${{ steps.checksums.outputs.sha_linux_arm64 }}"
              else
                url "https://github.com/yowainwright/1ls/releases/download/${{ steps.release.outputs.tag }}/1ls-linux-x64"
                sha256 "${{ steps.checksums.outputs.sha_linux_x64 }}"
              end
            end

            def install
              bin.install Dir["1ls-*"].first => "1ls"
            end

            test do
              output = shell_output("echo '{\"name\": \"test\"}' | #{bin}/1ls --compact '.name'")
              assert_match "test", output
            end
          end
          EOF

      - name: Commit and push
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add Formula/1ls.rb
          git commit -m "Update 1ls to ${{ steps.release.outputs.version }}"
          git push
